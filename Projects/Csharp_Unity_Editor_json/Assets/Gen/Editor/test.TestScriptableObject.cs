
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;

namespace editor.cfg.test
{

public sealed class TestScriptableObject :  Luban.EditorBeanBase 
{
    public TestScriptableObject()
    {
            desc = "";
            v2 = new vector2();
            v3 = new vector3();
            v4 = new vector4();
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  id = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["desc"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  desc = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["rate"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  rate = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["num"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  num = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["v2"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsObject) { throw new SerializationException(); }  v2 = vector2.LoadJsonvector2(_fieldJson);
            }
        }
        
        { 
            var _fieldJson = _json["v3"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsObject) { throw new SerializationException(); }  v3 = vector3.LoadJsonvector3(_fieldJson);
            }
        }
        
        { 
            var _fieldJson = _json["v4"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsObject) { throw new SerializationException(); }  v4 = vector4.LoadJsonvector4(_fieldJson);
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["id"] = new JSONNumber(id);
        }
        {

            if (desc == null) { throw new System.ArgumentNullException(); }
            _json["desc"] = new JSONString(desc);
        }
        {
            _json["rate"] = new JSONNumber(rate);
        }
        {
            _json["num"] = new JSONNumber(num);
        }
        {

            if (v2 == null) { throw new System.ArgumentNullException(); }
            { var __bjson = new JSONObject();  vector2.SaveJsonvector2(v2, __bjson); _json["v2"] = __bjson; }
        }
        {

            if (v3 == null) { throw new System.ArgumentNullException(); }
            { var __bjson = new JSONObject();  vector3.SaveJsonvector3(v3, __bjson); _json["v3"] = __bjson; }
        }
        {

            if (v4 == null) { throw new System.ArgumentNullException(); }
            { var __bjson = new JSONObject();  vector4.SaveJsonvector4(v4, __bjson); _json["v4"] = __bjson; }
        }
    }

    public static TestScriptableObject LoadJsonTestScriptableObject(SimpleJSON.JSONNode _json)
    {
        TestScriptableObject obj = new test.TestScriptableObject();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonTestScriptableObject(TestScriptableObject _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public int id;

    public string desc;

    public float rate;

    public int num;

    public vector2 v2;

    public vector3 v3;

    public vector4 v4;

}

}
