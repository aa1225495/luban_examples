
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg.common
{
public sealed partial class GlobalConfig : Luban.BeanBase
{
    public GlobalConfig(ByteBuf _buf) 
    {
        BagCapacity = _buf.ReadInt();
        BagCapacitySpecial = _buf.ReadInt();
        BagTempExpendableCapacity = _buf.ReadInt();
        BagTempToolCapacity = _buf.ReadInt();
        BagInitCapacity = _buf.ReadInt();
        QuickBagCapacity = _buf.ReadInt();
        ClothBagCapacity = _buf.ReadInt();
        ClothBagInitCapacity = _buf.ReadInt();
        ClothBagCapacitySpecial = _buf.ReadInt();
        if(_buf.ReadBool()){ BagInitItemsDropId = _buf.ReadInt(); } else { BagInitItemsDropId = null; }
        MailBoxCapacity = _buf.ReadInt();
        DamageParamC = _buf.ReadFloat();
        DamageParamE = _buf.ReadFloat();
        DamageParamF = _buf.ReadFloat();
        DamageParamD = _buf.ReadFloat();
        RoleSpeed = _buf.ReadFloat();
        MonsterSpeed = _buf.ReadFloat();
        InitEnergy = _buf.ReadInt();
        InitViality = _buf.ReadInt();
        MaxViality = _buf.ReadInt();
        PerVialityRecoveryTime = _buf.ReadInt();
    }

    public static GlobalConfig DeserializeGlobalConfig(ByteBuf _buf)
    {
        return new common.GlobalConfig(_buf);
    }

    /// <summary>
    /// 
    /// </summary>
    public readonly int BagCapacity;
    public readonly int BagCapacitySpecial;
    public readonly int BagTempExpendableCapacity;
    public readonly int BagTempToolCapacity;
    public readonly int BagInitCapacity;
    public readonly int QuickBagCapacity;
    public readonly int ClothBagCapacity;
    public readonly int ClothBagInitCapacity;
    public readonly int ClothBagCapacitySpecial;
    public readonly int? BagInitItemsDropId;
    public readonly int MailBoxCapacity;
    public readonly float DamageParamC;
    public readonly float DamageParamE;
    public readonly float DamageParamF;
    public readonly float DamageParamD;
    public readonly float RoleSpeed;
    public readonly float MonsterSpeed;
    public readonly int InitEnergy;
    public readonly int InitViality;
    public readonly int MaxViality;
    public readonly int PerVialityRecoveryTime;
   
    public const int __ID__ = -848234488;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "bagCapacity:" + BagCapacity + ","
        + "bagCapacitySpecial:" + BagCapacitySpecial + ","
        + "bagTempExpendableCapacity:" + BagTempExpendableCapacity + ","
        + "bagTempToolCapacity:" + BagTempToolCapacity + ","
        + "bagInitCapacity:" + BagInitCapacity + ","
        + "quickBagCapacity:" + QuickBagCapacity + ","
        + "clothBagCapacity:" + ClothBagCapacity + ","
        + "clothBagInitCapacity:" + ClothBagInitCapacity + ","
        + "clothBagCapacitySpecial:" + ClothBagCapacitySpecial + ","
        + "bagInitItemsDropId:" + BagInitItemsDropId + ","
        + "mailBoxCapacity:" + MailBoxCapacity + ","
        + "damageParamC:" + DamageParamC + ","
        + "damageParamE:" + DamageParamE + ","
        + "damageParamF:" + DamageParamF + ","
        + "damageParamD:" + DamageParamD + ","
        + "roleSpeed:" + RoleSpeed + ","
        + "monsterSpeed:" + MonsterSpeed + ","
        + "initEnergy:" + InitEnergy + ","
        + "initViality:" + InitViality + ","
        + "maxViality:" + MaxViality + ","
        + "perVialityRecoveryTime:" + PerVialityRecoveryTime + ","
        + "}";
    }
}

}
